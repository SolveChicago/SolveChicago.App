@using SolveChicago.Entities
@model SolveChicago.Web.Models.Profile.MemberProfileJobViewModel

@{
    ViewBag.Title = "Jobs";
    Layout = "~/Views/Shared/_Layout_MemberProfile.cshtml";
}

@section Styles {
    @Styles.Render("~/Content/jqueryui")
}

<div class="app-dashboard-body-content off-canvas-content" data-off-canvas-content>
    <header class="questionnaire-header">
        <h2>ANSWER THE FOLLOWING QUESTIONS</h2>
    </header>

    <ol class="progress-indicator">
        <li class="is-complete" data-step="1">
            <span>Personal</span>
        </li>
        <li class="is-complete" data-step="2">
            <span>Family in Household</span>
        </li>
        <li class="is-complete" data-step="3">
            <span>Education</span>
        </li>
        <li class="is-current" data-step="4">
            <span>Professional</span>
        </li>
        <li class="" data-step="5">
            <span>Training</span>
        </li>
        <li class="" data-step="6">
            <span>Gov. Benefits</span>
        </li>
        <li class="" data-step="7">
            <span>Finish</span>
        </li>
    </ol>

    @using (Html.BeginForm("MemberJobs", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div>
            <div class="main-questions row align-center">
                @Html.ValidationMessageFor(model => model.Member.CurrentlyLooking, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.Member.CurrentlyLooking, "Are you currently looking for a job?")
                <div>
                    @Html.RadioButtonFor(model => model.Member.CurrentlyLooking, true)
                    <label for="Member_CurrentlyLooking">Yes</label>
                    @Html.RadioButtonFor(model => model.Member.CurrentlyLooking, false)
                    <label for="Member_CurrentlyLooking">No</label>
                </div>

            </div>
            <div id="Jobs" class="hide">
                <div id="looking-for-job" class="row align-center hide">
                    <p><strong>We’re here to help! Please tell us about your most recent job.</strong></p>
                </div>
                <div id="not-looking-for-job" class="row align-center hide">
                    <p><strong>Okay! Please tell us about your current job.</strong></p>
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Member.MemberId)
                @for (int i = 0; i < Model.Member.Jobs.Length; i++)
                {
                    <div class="Job entry" data-id="@(i)">
                        <div class="row app-dashboard-form-container-space-around">
                            <div class="form-holder">
                                @Html.HiddenFor(model => Model.Member.Jobs[i].CorporationId)

                                @Html.ValidationMessageFor(model => Model.Member.Jobs[i].Name, "", new { @class = "text-danger" })
                                @Html.LabelFor(model => Model.Member.Jobs[i].Name, "Company Name", htmlAttributes: new { })
                                @Html.EditorFor(model => Model.Member.Jobs[i].Name, new { htmlAttributes = new { @class = "corporation-list" } })

                                @Html.ValidationMessageFor(model => Model.Member.Jobs[i].EmployeePay, "", new { @class = "text-danger" })
                                @Html.LabelFor(model => Model.Member.Jobs[i].EmployeePay, "What was your hourly pay?", htmlAttributes: new { })
                                @Html.EditorFor(model => Model.Member.Jobs[i].EmployeePay, new { htmlAttributes = new { @class = "number-entry" } })
                            </div>
                            <div class="form-holder">
                                @Html.ValidationMessageFor(model => Model.Member.Jobs[i].EmployeeStart, "", new { @class = "text-danger" })
                                @Html.LabelFor(model => Model.Member.Jobs[i].EmployeeStart, "When did you start?", htmlAttributes: new { })
                                @Html.EditorFor(model => Model.Member.Jobs[i].EmployeeStart, new { htmlAttributes = new { @placeholder = "mm/yyyy" } })

                                @Html.ValidationMessageFor(model => Model.Member.Jobs[i].IsCurrent, "", new { @class = "text-danger" })
                                @Html.LabelFor(model => Model.Member.Jobs[i].IsCurrent, "Do you still work here?", htmlAttributes: new { })
                                @Html.RadioButtonFor(model => model.Member.Jobs[i].IsCurrent, true, new { @class = "is-job-current" })
                                <label for="Member_Jobs_[i]__IsCurrent">Yes</label>
                                @Html.RadioButtonFor(model => model.Member.Jobs[i].IsCurrent, false, new { @class = "is-job-current" })
                                <label for="Member_Jobs_[i]__IsCurrent">No</label>

                                <div class="job-endinfo @(Model.Member.Jobs[i].IsCurrent ? "hide" : "")">
                                    @Html.ValidationMessageFor(model => Model.Member.Jobs[i].EmployeeEnd, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => Model.Member.Jobs[i].EmployeeEnd, "When was your last day?", htmlAttributes: new { })
                                    @Html.EditorFor(model => Model.Member.Jobs[i].EmployeeEnd, new { htmlAttributes = new { @placeholder = "mm/yyyy" } })

                                    @Html.ValidationMessageFor(model => Model.Member.Jobs[i].EmployeeReasonForLeaving, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => Model.Member.Jobs[i].EmployeeReasonForLeaving, "Why did you leave?", htmlAttributes: new { })
                                    @Html.EditorFor(model => Model.Member.Jobs[i].EmployeeReasonForLeaving, new { htmlAttributes = new { } })
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <div class="row align-center has-border">
                    <a class="add-job addEntry" href="javascript:void(0)"> <img class="add-job-icon" src="../img/icon-add.svg"> Add Job</a>
                </div>
            </div>
        </div>
        <div class="row align-center">
            <input type="submit" value="Submit" class="submit-create-profile" />
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/profile_member")

    <script>
        window.addEntryCallback = function (newEntry, isPageLoad) {
            var corporationsList = [];
            @foreach(var corporation in Model.CorporationList)
            {
                @:corporationsList.push("@corporation");
            }
            newEntry.find('.corporation-list').autocomplete({ source: corporationsList });
            
            window.bindRadioContent(newEntry.find('.is-job-current'), "", newEntry.find('.job-endinfo'), "", isPageLoad);
        }

        window.bindRadioContent($('input[name=Member\\.CurrentlyLooking]'), $('#looking-for-job, #Jobs'), $('#not-looking-for-job, #Jobs'), "", true);

        $('.Job').each(function () { window.addEntryCallback($(this), true) });

    </script>
}
