@model SolveChicago.Web.Models.Profile.NonprofitProfile

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm("Nonprofit", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <header>
        <h4><strong>NONPROFIT:</strong> Personal Profile</h4>
    </header>

    <div class="row app-dashboard-form-container">
        <div class="create-profile-form-holder">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)


            @Html.LabelFor(model => model.Name, htmlAttributes: new { })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

            @Html.LabelFor(model => model.ProfilePicture, htmlAttributes: new { })
            @if (!string.IsNullOrEmpty(Model.ProfilePicturePath) && Model.ProfilePicturePath != "/img/noPhoto.png")
            {
                <div>
                    <img src="@Model.ProfilePicturePath" />
                </div>
            }
            @Html.TextBoxFor(model => model.ProfilePicture, new { type = "file", @class = "file-input" })
            @Html.ValidationMessageFor(model => model.ProfilePicture, "", new { @class = "text-danger" })

            @Html.LabelFor(model => model.Phone, htmlAttributes: new { })
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })

            @Html.LabelFor(model => model.Address1, htmlAttributes: new { })
            @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { } })
            @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })

            @Html.LabelFor(model => model.Address2, htmlAttributes: new { })
            @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { } })
            @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })

            @Html.LabelFor(model => model.City, htmlAttributes: new { })
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })

            @Html.LabelFor(model => model.Province, htmlAttributes: new { })
            @Html.EditorFor(model => model.Province, new { htmlAttributes = new { } })
            @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger" })

            @Html.LabelFor(model => model.Country, htmlAttributes: new { })
            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { } })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })

            <hr class="line-divider">

            <input class="submit-create-profile" type="submit" value="Submit">
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
