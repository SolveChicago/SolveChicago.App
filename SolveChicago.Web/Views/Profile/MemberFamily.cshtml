@using SolveChicago.Entities
@model SolveChicago.Web.Models.Profile.MemberProfileFamilyViewModel

@{
    ViewBag.Title = "Family";
    Layout = "~/Views/Shared/_Layout_MemberProfile.cshtml";
}

<div class="app-dashboard-body-content off-canvas-content" data-off-canvas-content>
    <header class="questionnaire-header">
        <h2>ANSWER THE FOLLOWING QUESTIONS</h2>
    </header>

    @using (Html.BeginForm("MemberFamily", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Member.MemberId)
            @for (int i = 0; i < Model.Member.Family.FamilyMembers.Length; i++)
            {
            <div id="FamilyMember" data-id="@(i)">
                <div class="row app-dashboard-form-container-space-around">
                    <div class="form-holder">
                        @Html.HiddenFor(model => Model.Member.Family.FamilyMembers[i].Id)

                        @Html.ValidationMessageFor(model => Model.Member.Family.FamilyMembers[i].FirstName, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => Model.Member.Family.FamilyMembers[i].FirstName, htmlAttributes: new { })
                        @Html.EditorFor(model => Model.Member.Family.FamilyMembers[i].FirstName, new { htmlAttributes = new { } })

                        @Html.ValidationMessageFor(model => Model.Member.Family.FamilyMembers[i].LastName, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => Model.Member.Family.FamilyMembers[i].LastName, htmlAttributes: new { })
                        @Html.EditorFor(model => Model.Member.Family.FamilyMembers[i].LastName, new { htmlAttributes = new { } })

                        @Html.ValidationMessageFor(model => Model.Member.Family.FamilyMembers[i].Gender, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => Model.Member.Family.FamilyMembers[i].Gender, htmlAttributes: new { })
                        @Html.DropDownListFor(model => Model.Member.Family.FamilyMembers[i].Gender, Model.GenderList.Select(x => new SelectListItem { Value = x, Text = x, Selected = x == Model.Member.Family.FamilyMembers[i].Gender }), "Choose a Gender", new { htmlAttributes = new { } })
                    </div>
                    <div class="form-holder">
                        @Html.ValidationMessageFor(model => Model.Member.Family.FamilyMembers[i].Birthday, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => Model.Member.Family.FamilyMembers[i].Birthday)
                        @Html.EditorFor(model => Model.Member.Family.FamilyMembers[i].Birthday, new { htmlAttributes = new { @class = "fm-birthday" } })

                        @Html.ValidationMessageFor(model => Model.Member.Family.FamilyMembers[i].Gender, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => Model.Member.Family.FamilyMembers[i].Relation, htmlAttributes: new { })
                        @Html.DropDownListFor(model => Model.Member.Family.FamilyMembers[i].Relation, Model.RelationshipList.Select(x => new SelectListItem { Value = x, Text = x, Selected = x == Model.Member.Family.FamilyMembers[i].Relation }), "Choose a Relationship", new { htmlAttributes = new { } })
                        @if (Model.Member.IsHeadOfHousehold == false)
                        {
                            @Html.ValidationMessageFor(model => model.Member.IsHeadOfHousehold, "", new { @class = "text-danger" })
                            @Html.LabelFor(model => model.Member.IsHeadOfHousehold, htmlAttributes: new { })
                            @Html.RadioButtonFor(model => model.Member.IsHeadOfHousehold, true, new { htmlAttributes = new { } })
                            <label for="Member_IsHeadOfHousehold">Yes</label>
                            @Html.RadioButtonFor(model => model.Member.IsHeadOfHousehold, false, new { htmlAttributes = new { } })
                            <label for="Member_IsHeadOfHousehold">No</label>
                        }

                        <div id="fm-contact-info" class="hide">
                            @Html.ValidationMessageFor(model => Model.Member.Family.FamilyMembers[i].Phone, "", new { @class = "text-danger" })
                            @Html.LabelFor(model => Model.Member.Family.FamilyMembers[i].Phone, htmlAttributes: new { })
                            @Html.EditorFor(model => Model.Member.Family.FamilyMembers[i].Phone, new { htmlAttributes = new { } })

                            @Html.LabelFor(model => Model.Member.Family.FamilyMembers[i].Email, htmlAttributes: new { })
                            @Html.EditorFor(model => Model.Member.Family.FamilyMembers[i].Email, (Model.Member.Family.FamilyMembers[i].Id.HasValue) ? new {  @disabled = true } : null)
                            @Html.ValidationMessageFor(model => Model.Member.Family.FamilyMembers[i].Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            }
            <a href="javascript:void(0)" id="AddFamilyMember" class="addEntry">Add Family Member</a>
        </div>
        <hr />
        <div class="row align-center">
            <input type="submit" value="Submit" class="submit-create-profile" />
        </div>
        }
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/profile_member")

        <script>
            $('.fm-birthday').fdatepicker({
                leftArrow: '<<',
                rightArrow: '>>',
            }).on('changeDate', function () {
                var date = new Date($(this).val()),
                    sixteenYearsAgo = new Date(new Date(new Date().setFullYear(new Date().getFullYear() - 16)));
                if (date < sixteenYearsAgo)
                    $('#fm-contact-info').removeClass('hide');
                else
                    $('#fm-contact-info').addClass('hide');
            });
        </script>
    }
