@using SolveChicago.Entities
@model SolveChicago.Web.Models.Profile.MemberProfileNonprofitViewModel

@{
    ViewBag.Title = "Nonprofits";
    Layout = "~/Views/Shared/_Layout_MemberProfile.cshtml";
}

<div class="app-dashboard-body-content off-canvas-content" data-off-canvas-content>
    <header class="questionnaire-header">
        <h2>ANSWER THE FOLLOWING QUESTIONS</h2>
    </header>

    @using (Html.BeginForm("MemberNonprofits", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Member.MemberId)
            @for (int i = 0; i < Model.Member.Nonprofits.Length; i++)
            {
                <div id="Nonprofit" data-id="@(i)">
                    <div class="row app-dashboard-form-container-space-around">
                        <div class="form-holder">
                            @Html.HiddenFor(m => Model.Member.Nonprofits[i].NonprofitId)

                            @Html.LabelFor(model => model.Member.Nonprofits[i].NonprofitName, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.Member.Nonprofits[i].NonprofitName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Member.Nonprofits[i].NonprofitName, "", new { @class = "text-danger" })

                            @Html.LabelFor(model => model.Member.Nonprofits[i].Enjoyed, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.Member.Nonprofits[i].Enjoyed, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Member.Nonprofits[i].Enjoyed, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-holder">
                            @Html.LabelFor(model => model.Member.Nonprofits[i].SkillsAcquired, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.Member.Nonprofits[i].SkillsAcquired, new { htmlAttributes = new { @class = "form-control tokenfield" } })
                            @Html.ValidationMessageFor(model => model.Member.Nonprofits[i].SkillsAcquired, "", new { @class = "text-danger" })

                            @Html.LabelFor(model => model.Member.Nonprofits[i].Struggled, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.Member.Nonprofits[i].Struggled, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Member.Nonprofits[i].Struggled, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }
            <a href="javascript:void(0)" id="AddNonprofit" class="addEntry">Add Nonprofit</a>
        </div>
        <hr />
        <div class="row align-center">
            <input type="submit" value="Submit" class="submit-create-profile" />
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/profile_member")
}
