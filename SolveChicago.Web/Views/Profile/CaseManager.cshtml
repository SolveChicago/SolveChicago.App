@model SolveChicago.Web.Models.Profile.CaseManagerProfileViewModel

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm("CaseManager", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <header>
        <h4><strong>Case Manager:</strong> Profile</h4>
    </header>
    <div class="row app-dashboard-form-container">
        <div class="create-profile-form-holder">
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CaseManager.Id)
            @Html.HiddenFor(m => m.CaseManager.UserId)
            @Html.HiddenFor(m => m.CaseManager.NonprofitId)

            @Html.ValidationMessageFor(model => model.CaseManager.FirstName, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.CaseManager.FirstName, "First Name", htmlAttributes: new { })
            @Html.EditorFor(model => model.CaseManager.FirstName, new { htmlAttributes = new { } })

            @Html.ValidationMessageFor(model => model.CaseManager.LastName, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.CaseManager.LastName, "Last Name", htmlAttributes: new { })
            @Html.EditorFor(model => model.CaseManager.LastName, new { htmlAttributes = new { } })
            
            @Html.LabelFor(model => model.CaseManager.ProfilePicture, "Upload a Photo", htmlAttributes: new { })
            @if (!string.IsNullOrEmpty(Model.CaseManager.ProfilePicturePath) && Model.CaseManager.ProfilePicturePath != "/img/side-nav-members-icon.svg")
            {
                <div>
                    <img src="@Model.CaseManager.ProfilePicturePath" alt="Profile Picture">
                </div>
            }
            @Html.TextBoxFor(model => model.CaseManager.ProfilePicture, new { type = "file", @class = "file-input" })
            @Html.ValidationMessageFor(model => model.CaseManager.ProfilePicture, "", new { @class = "text-danger" })

            @Html.ValidationMessageFor(model => model.CaseManager.Phone, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.CaseManager.Phone, htmlAttributes: new { })
            @Html.EditorFor(model => model.CaseManager.Phone, new { htmlAttributes = new { @class = "number-entry" } })
            
            @Html.ValidationMessageFor(model => model.CaseManager.Birthday, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.CaseManager.Birthday, htmlAttributes: new { })
            @Html.EditorFor(model => model.CaseManager.Birthday, new { htmlAttributes = new { @placeholder = "mm/dd/yyyy" } })

            @Html.ValidationMessageFor(model => model.CaseManager.Gender, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.CaseManager.Gender, htmlAttributes: new { })
            @Html.DropDownListFor(model => model.CaseManager.Gender, Model.GenderList.Select(x => new SelectListItem { Value = x, Text = x, Selected = x == Model.CaseManager.Gender }), htmlAttributes: new { })

            <input class="submit-create-profile" type="submit" value="Submit">
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
