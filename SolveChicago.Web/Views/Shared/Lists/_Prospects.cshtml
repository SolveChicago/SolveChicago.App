@using SolveChicago.Common;
@model IEnumerable<SolveChicago.Entities.Member>
<header class="members-header">
    <h2><strong>PROSPECTS:</strong> OVERVIEW</h2>

    @if (ViewBag.AdminId != null)
    {
        <span style="text-align:right"><a href="/Admins/AddMember">Add Member</a></span>
    }

    @*<div class="small-12 medium-12 large-3">
            <input class="search-members" type="text" name="search" placeholder="Search..">
        </div>*@
</header>

@if (Model.Count() > 0)
{
    <div class="member-card member-card-header">
        <div class="member-overview">
            <div class="row large-unstack">
                <span class="member-card-thumb"></span>
                <div class="columns has-space">
                    <strong>Name</strong>
                </div>
                <div class="columns has-space">
                    <strong>Desired Skills</strong>
                </div>
                <div class="columns has-space">
                    <strong>Contact</strong>
                </div>
                <div class="columns has-space">

                </div>
            </div>
        </div>
    </div>
    foreach (var item in Model)
    {
        <section class="member-card prospects">
            <div class="member-overview">
                <div class="row large-unstack">
                    <span class="member-card-thumb"><img src="@(item.ProfilePicturePath)" alt="Profile Picture"></span>
                    <div class="columns centered has-space">
                        <span class="member-name">@(string.Format("{0} {1}", item.FirstName, item.LastName))</span>
                    </div>
                    <div class="columns has-space">
                        <span>@(string.Join(", ", @item.MemberSkills.Where(x => !x.IsComplete).Select(x => x.Skill.Name)))</span>
                    </div>
                    <div class="columns has-space">
                        <span>@(item.ContactPreference != null ? item.ContactPreference == Constants.Member.ContactPreference.Phone ? string.Join(", ", item.PhoneNumbers.Select(x => x.Number)) : item.Email : item.PhoneNumbers.Any() ? string.Join(", ", item.PhoneNumbers.Select(x => x.Number)) : item.Email)</span>
                    </div>
                    <div class="columns">
                        <a href="/Prospects/InviteMember?memberId=@item.Id&nonprofitId=@ViewBag.NonprofitId" class="show-family button">Invite</a>
                    </div>
                </div>
            </div>
        </section>
    }
}
else
{
    <p>No Prospects.</p>
}

